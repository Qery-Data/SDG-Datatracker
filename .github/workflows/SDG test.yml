name: SDG Data Update
on: 
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *"

jobs:
  setup:
    runs-on: Ubuntu-20.04
    steps:
      - name: Get working copy
        uses: actions/checkout@main
        with:
          fetch-depth: 1
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Requirements
        run: pip install -r requirements.txt

  SDG_1:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 1 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_1.py

  SDG_2:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 2 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_2.py

  SDG_3:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 3 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_3.py

  SDG_4:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 4 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_4.py

  SDG_5:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 5 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_5.py

  SDG_6:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 6 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_6.py

  SDG_7:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 7 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_7.py

  SDG_8:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 8 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_8.py

  SDG_9:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 9 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_9.py

  SDG_10:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 10 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_10.py

  SDG_11:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 11 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_11.py

  SDG_12:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 12 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_12.py

  SDG_13:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 13 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_13.py

  SDG_14:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 14 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_14.py

  SDG_15:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 15 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_15.py

  SDG_16:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 16 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_16.py

  SDG_17:
    needs: setup
    runs-on: Ubuntu-20.04
    steps:
      - name: Run SDG 17 Script
        env: 
          DW_TOKEN: ${{ secrets.DW_TOKEN }}
        run: python SDG_17.py

  commit:
    needs: [SDG_1, SDG_2, SDG_3, SDG_4, SDG_5, SDG_6, SDG_7, SDG_8, SDG_9, SDG_10, SDG_11, SDG_12, SDG_13, SDG_14, SDG_15, SDG_16, SDG_17]
    runs-on: Ubuntu-20.04
    steps:
      - name: Commit and push if it changed
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add -A
          timestamp=$(date -u +%Y-%m-%d-%H-%M-%S)
          branch_name="sdg-data-update-${timestamp}"
          git checkout -b "${branch_name}"
          git commit -m "Latest data: ${timestamp}" || exit 0
          git push origin "${branch_name}"
